#@ # 
#@ # Running icc_shell Version Q-2019.12 for linux64 -- Nov 26, 2019
#@ # Date:   Wed Mar  8 10:29:37 2023
#@ # Run by: njs82@xunil-03.coe.drexel.edu
#@ 

source -echo -verbose /home/njs82@drexel.edu/ECEC574/icc_pnr/icc_pnr.tcl
#@ # -- Starting source /home/njs82@drexel.edu/ECEC574/icc_pnr/icc_pnr.tcl

#@ source -echo ../set_env.tcl
#@ # -- Starting source ../set_env.tcl

#@ ## Define the library location
#@ set link_library [ list 	/mnt/class_data/ecec574-w2019/PDKs/SAED32nm/lib/stdcell_rvt/db_ccs/saed32rvt_ss0p95v125c.db 	/mnt/class_data/ecec574-w2019/PDKs/SAED32nm/lib/stdcell_rvt/db_ccs/saed32rvt_ss0p95v25c.db 	/mnt/class_data/ecec574-w2019/PDKs/SAED32nm/lib/stdcell_rvt/db_ccs/saed32rvt_ss0p95vn40c.db ]
#@ 
#@ set target_library [ list /mnt/class_data/ecec574-w2019/PDKs/SAED32nm/lib/stdcell_rvt/db_ccs/saed32rvt_ss0p95v25c.db ]
#@ 
#@ #set_app_var command_log_file ./logs/command.log
#@ #set_app_var view_command_log_file ./logs/view_command.log
#@ #set_app_var sh_command_log_file ./logs/command.log
#@ #set_app_var sh_output_log_file ./logs/output.log
#@ # -- End source ../set_env.tcl

#@ source -echo scripts/init_design.tcl
#@ # -- Starting source scripts/init_design.tcl

#@ set libdir "/mnt/class_data/ecec574-w2019/PDKs/SAED32nm/tech/star_rcxt"
#@ set tlupmax "$libdir/saed32nm_1p9m_Cmax.tluplus"
#@ set tlunom "$libdir/saed32nm_1p9m_nominal.tluplus"
#@ set tlupmin "$libdir/saed32nm_1p9m_Cmin.tluplus"
#@ set tech2itf "$libdir/saed32nm_tf_itf_tluplus.map"
#@ set_tlu_plus_files -max_tluplus $tlunom -tech2itf_map $tech2itf
#@ 
#@ set techfile "/mnt/class_data/ecec574-w2019/PDKs/SAED32nm/tech/milkyway/saed32nm_1p9m_mw.tf"
#@ set ref_lib "/mnt/class_data/ecec574-w2019/PDKs/SAED32nm/lib/stdcell_rvt/milkyway/saed32nm_rvt_1p9m"
#@ set lib_name "fifo"
#@ 
#@ create_mw_lib $lib_name.mw 		 -technology $techfile 		 -mw_reference_library $ref_lib 
#@ open_mw_lib $lib_name.mw
#@ 
#@ #set design_data ../dc_synth/output/fifo.ddc
#@ set cell_name "FIFO"
#@ #import_designs $design_data -format ddc -top $cell_name
#@ 
#@ set mw_logic0_net VSS
#@ set mw_logic1_net VDD
#@ 
#@ read_verilog ../dc_synth/output/fifo.v
#@ 
#@ #uniquify_fp_mw_cel
#@ 
#@ link
#@ 
#@ read_sdc ../dc_synth/const/fifo.sdc
#@ # -- Starting source /mnt/class_data/ecec574-w2019/tools/icc/icc/Q-2019.12/auxx/syn/all_command_option_def.tcl

#@ define_proc_attributes all_physical_only_cells -info "Get the collection of physical only cells" -define_args {
#@ { -coordinates "coordinates of bounding box" "llx lly urx ury" string {optional}} 
#@ { -lib_cells "get cells related to these objects" "objects" list {optional}} 
#@ { -cell_name "list of cell name patterns and collections" "patterns" list {optional}} 
#@ { "" "Existing collection" "arguments" list {optional}} 
#@ }
#@ define_proc_attributes all_physical_only_nets  -info "Get the collection of physical only nets" -define_args {
#@ { "" "list of cell name patterns and collections" "arguments" list {optional}} 
#@ } 
#@ define_proc_attributes all_drc_violated_nets -info "Returns all DRC violated nets" -define_args { 
#@ { -max_capacitance "max Cap DRC violated nets" "" string {optional}} 
#@ { -max_transition "max transition time DRC violated nets" "" string {optional}} 
#@ { -max_fanout "max fanout DRC violated nets" "" string {optional}}
#@ { -threshold "Captures all values more than or equal to threshold" "threshold" string {optional}} 
#@ { -bound "Captures all values less than or equal to bound bound" "upper" string {optional}} 
#@ { "" "objects patterns OR collection" "arguments"  list {optional}} 
#@ }
#@ define_proc_attributes all_fanin -info "return pins or cells in transitive fanin" -define_args { 
#@ { -to "set of sink ports, pins, or nets" "sink_list" list {optional}} 
#@ { -startpoints_only  "return only the timing startpoints" "" string {optional}} 
#@ { -exclude_bboxes "black-boxes are not included in return-set" "" string {optional}} 
#@ { -break_on_bboxes  "traversal stops at black-boxes" "" string {optional}} 
#@ { -only_cells "only cells are included in the return-set" "" string {optional}} 
#@ { -flat "trace entire design instead of just current hierarchy" "" string {optional}} 
#@ { -levels "maximum number of levels of logic to traverse" "n" string {optional}} 
#@ { -trace_arcs "Type of network arcs to trace. Values: timing, all" "arc_type" string {optional}}
#@ }
#@ define_proc_attributes all_high_fanout -info "Returns all high fanout objects" -define_args { 
#@ { -nets "high fanout nets" "" string {optional}} 
#@ { -threshold "high fanout threshold: value>=0" "threshold" string {optional}} 
#@ { -through_buf_inv "treat buffers and inverters as transparent -check for transitive fanout" "" string {optional}} 
#@ { "" "objects patterns OR collection" "arguments" string {optional}} 
#@ }
#@ define_proc_attributes all_ideal_nets -info "Returns all ideal nets" -define_args { 
#@ { "" "objects patterns OR collection" "arguments" string {optional}} 
#@ }
#@ define_proc_attributes all_inputs -info "return input ports" -define_args { 
#@ { -clock "ports with input delay relative to clock" "clock" string {optional}} 
#@ { -edge_triggered "ports with non-level-sensitive input delay" "" string {optional}} 
#@ { -level_sensitive "ports with level-sensitive input delay" "" string {optional}} 
#@ }
#@ define_proc_attributes all_outputs -info "return output ports" -define_args { 
#@ { -clock "ports with output delay relative to clock" "clock" string {optional}} 
#@ { -edge_triggered "ports with non-level-sensitive output delay" "" string {optional}} 
#@ { -level_sensitive "ports with level-sensitive output delay" "" string {optional}} 
#@ }
#@ define_proc_attributes all_threestate -info "Returns all threestate objects" -define_args { 
#@ { -nets "threestate nets" "" string {optional}} 
#@ { "" "objects patterns OR collection" "arguments" string {optional}} 
#@ }
#@ define_proc_attributes all_dont_touch -info "Returns all dont touch objects" -define_args { 
#@ { -nets "Dont touch nets" "" string {optional}} 
#@ { -cells "Dont touch cells" "" string {optional}} 
#@ { "" "Dont touch patterns OR collections" "patterns" string {optional}} 
#@ }
#@ define_proc_attributes all_size_only_cells -info "Returns all size_only cells" -define_args { 
#@ { "" "Object patterns OD collections" "patterns" string {optional}} 
#@ }
#@ define_proc_attributes all_clocks -info "return all clocks in the current design"  
#@ define_proc_attributes all_designs -info "return all designs" 
#@ define_proc_attributes all_registers  -info "create a collection of register cells or pins" -define_args { 
#@ { -no_hierarchy "only search the top level of hierarchy" "" string {optional}} 
#@ {-rise_clock "return registers triggered by rise edge of this clock" "rise_clock" string {optional}}
#@ {-fall_clock "return registers triggered by rise edge of this clock" "fall_clock" string {optional}}
#@ { -clock "return registers of this clock" "clock" string {optional}} 
#@ { -cells "return cells - this is the default" "" string {optional}} 
#@ { -data_pins "return data_pins" "" string {optional}} 
#@ { -clock_pins "return clock_pins" "" string {optional}} 
#@ { -slave_clock_pins "return slave_clock_pin" "" string {optional}} 
#@ { -inverted_output "return FF's with inverted output phase" "" string {optional}} 
#@ { -output_pins "return output_pins" "" string {optional}} 
#@ { -level_sensitive "only consider level sensitive registers" "" string {optional}} 
#@ { -edge_triggered "only consider edge triggered register" "" string {optional}} 
#@ { -master_slave "only consider master/slave registers" "" string {optional}} 
#@ }
#@ define_proc_attributes all_critical_cells -info "return critical cells" -define_args { 
#@ { -slack_range "critical range to select cells:value>=0" "range_value" string {optional}} 
#@ }
#@ define_proc_attributes all_critical_pins -info "return critical pins" -define_args { 
#@ { -slack_range "critical range to select cells:value>=0" "range_value" string {optional}} 
#@ { -type "pintype: Values: endpoint, startpoint" "pin_type" string {optional}} 
#@ }
#@ define_proc_attributes get_magnet_cells -info "return magnet cells collection" -define_args {
#@ { -stop_by_sequential_cells "don't pull sequential cells" "" string {optional}} 
#@ { -exclude_buffers "skip through buffers in levels" "" string {optional}} 
#@ { -exclude_cells "list of excluded cells list" "" string {optional}}
#@ { -logical_level "number of logical levels to pull for placement" "integer" string {optional}} 
#@ { -stop_points "list of stop points where to stop magnetizing paths" "object_list" list {optional}} 
#@ { "" "a list of magnet objects" "magnet_objects" list {optional}} 
#@ }
#@ define_proc_attributes all_fanout -info "return pins or cells in transitive fanout" -define_args {
#@ {-clock_tree "return all clock tree components in design" "" string {optional}}
#@ {-from "set of source ports, pins, or nets" "source_list" list {optional}}
#@ {-endpoints_only "return only the timing endpoints" "" string {optional}}
#@ {-exclude_bboxes "black-boxes are not included in return-set" "" string {optional}}
#@ {-break_on_bboxes "traversal stops at black-boxes" "" string {optional}}
#@ {-only_cells "only cells are included in the return-set" "" string {optional}}
#@ {-flat "trace entire design instead of just current hierarchy" "" string {optional}}
#@ {-levels "maximum number of levels of logic to traverse" "n" string {optional}}
#@ {-trace_arcs "Type of network arcs to trace. Values: timing, all" "arc_type" string {optional}}
#@ }
#@ define_proc_attributes all_physical_only_ports -info " Get the collection of physical only ports" -define_args {
#@ {"" "list of cell name patterns and collections" "arguments" list {optional}}
#@ }
#@ define_proc_attributes get_matching_nets_for_pattern -info "Get matched nets for a certain net pattern" -define_args { 
#@ { -pattern "pattern id" "integer" string {optional}} 
#@ { -optimizable "Return all nets that can be optimized" "" string {optional}} 
#@ { -transition_lower_limit "nets with transition equal or greater than lower limit" "lower_limit" string {optional}} 
#@ { -transition_upper_limit "nets with transition less than upper limit" "upper_limit" string {optional}} 
#@ { -setup_slack_lower_limit "nets with slack equal or greater than lower limit" "lower_limit" string {optional}} 
#@ { -setup_slack_upper_limit "nets with slack less than upper limit" "upper_limit" string {optional}} 
#@ { -hold_slack_lower_limit "nets with hold slack equal or greater than lower limit" "lower_limit" string {optional}} 
#@ { -hold_slack_upper_limit "nets with hold slack less than upper limit" "upper_limit" string {optional}} 
#@ }
#@ # -- End source /mnt/class_data/ecec574-w2019/tools/icc/icc/Q-2019.12/auxx/syn/all_command_option_def.tcl

#@ 
#@ save_mw_cel -as fifo_initial
#@ # -- End source scripts/init_design.tcl

#@ source -echo scripts/floorplan_icc.tcl
#@ # -- Starting source scripts/floorplan_icc.tcl

#@ ###########################################################################
#@ ### Floorplanning
#@ ###########################################################################
#@ 
#@ # Lab 3
#@ #create_floorplan -core_utilization 0.6 -left_io2core 5 -bottom_io2core 5 -right_io2core 5 -top_io2core 5
#@ 
#@ # Lab 4
#@ create_floorplan -core_utilization 0.6 -left_io2core 10 -bottom_io2core 10 -right_io2core 10 -top_io2core 10 -core_aspect_ratio 0.6
#@ 
#@ save_mw_cel -as fifo_init_fp
#@ 
#@ derive_pg_connection -power_net VDD -ground_net VSS
#@ derive_pg_connection -power_net VDD -ground_net VSS -tie
#@ 
#@ ##Create VSS ring
#@ # Lab 3
#@ create_rectangular_rings  -nets  {VSS}  -left_offset 0.5  -left_segment_layer M6 -left_segment_width 1.0 -extend_ll -extend_lh -right_offset 0.5 -right_segment_layer M6 -right_segment_width 1.0 -extend_rl -extend_rh -bottom_offset 0.5  -bottom_segment_layer  M7 -bottom_segment_width 1.0 -extend_bl -extend_bh -top_offset 0.5 -top_segment_layer M7 -top_segment_width 1.0 -extend_tl -extend_th
#@ 
#@ # Lab 4
#@ #create_rectangular_rings  -nets  {VSS} -right_segment_layer M7 -left_segment_layer M7 -bottom_segment_layer  M6 -top_segment_layer M6 
#@ 
#@ 
#@ ## Create VDD Ring
#@ # Lab 3
#@ create_rectangular_rings  -nets  {VDD}  -left_offset 1.8  -left_segment_layer M6 -left_segment_width 1.0 -extend_ll -extend_lh -right_offset 1.8 -right_segment_layer M6 -right_segment_width 1.0 -extend_rl -extend_rh -bottom_offset 1.8  -bottom_segment_layer M7 -bottom_segment_width 1.0 -extend_bl -extend_bh -top_offset 1.8 -top_segment_layer M7 -top_segment_width 1.0 -extend_tl -extend_th
#@ 
#@ # Lab 4
#@ #create_rectangular_rings  -nets  {VDD} -right_segment_layer M7 -left_segment_layer M7 -bottom_segment_layer  M6 -top_segment_layer M6 
#@ 
#@ ## Creates Power Strap 
#@ # Lab 3
#@ create_power_strap -nets { VDD } -layer M6 -direction vertical -width 3  
#@ create_power_strap -nets { VSS } -layer M6 -direction vertical  -width 3
#@ 
#@ # Lab 4
#@ #create_power_strap -nets { VDD } -layer M7 -direction vertical -width 3  
#@ #create_power_strap -nets { VSS } -layer M7 -direction vertical  -width 3
#@ 
#@ save_mw_cel -as fifo_pow_rings
#@ 
#@ ## Save the design
#@ create_fp_placement
#@ 
#@ save_mw_cel -as fifo_create_fp
#@ 
#@ #insert_stdcell_filler -cell_with_metal {SHFILL1_RVT SHFILL2_RVT SHFILL3_RVT SHFILL64_RVT SHFILL128_RVT}
#@ 
#@ save_mw_cel -as fifo_fill_fp
#@ 
#@ preroute_standard_cells -route_pins_on_layer M1
#@ 
#@ save_mw_cel -as fifo_fp
#@ report_fp_placement > reports/fp_placement.rpt
#@ # -- End source scripts/floorplan_icc.tcl

#@ source -echo scripts/place_icc.tcl
#@ # -- Starting source scripts/place_icc.tcl

#@ ###########################################################################
#@ ### Placement
#@ ###########################################################################
#@ 
#@ set_buffer_opt_strategy -effort low
#@ 
#@ set_tlu_plus_files -max_tluplus $tlupmax -min_tluplus $tlupmin -tech2itf_map $tech2itf
#@ 
#@ ##Goto Layout Window , Placement ' Core Placement and Optimization .  A new window opens up as shown below . There are various options, you can click on what ever option you want and say ok. The tool will do the placement. Alternatively you can also run at the command at icc_shell . Below is example with congestion option.
#@ 
#@ check_physical_design > output/fifo_pre_place_check.rpt
#@ report_ignored_layers > output/fifo_pre_place_ignored_layers.rpt
#@ place_opt_feasibility > output/fifo_pre_place_opt_feasibility.rpt
#@ create_qor_snapshot -name pre_place > output/fifo_pre_place_qor.rpt
#@ 
#@ place_opt -skip_initial_placement -congestion -power
#@ 
#@ save_mw_cel -as fifo_place
#@ 
#@ ### Reports 
#@ 
#@ report_placement_utilization > output/fifo_place_util.rpt
#@ report_qor_snapshot > output/fifo_place_qor_snapshot.rpt
#@ report_qor > output/fifo_place_qor.rpt
#@ 
#@ report_power > output/fifo_place_power.rpt
#@ 
#@ ### Timing Report
#@ 
#@ report_timing -delay max -max_paths 20 > output/fifo_place.setup.rpt
#@ report_timing -delay min -max_paths 20 > output/fifo_place.hold.rpt
#@ 
#@ 
#@ # -- End source scripts/place_icc.tcl

#@ source -echo scripts/cts_icc.tcl
#@ # -- Starting source scripts/cts_icc.tcl

#@ ###########################################################################
#@ ### Clock Tree Synthesis
#@ ############################################################################
#@ 
#@ report_clock_tree > output/fifo_pre_cts_tree.rpt
#@ 
#@ 
#@ ##In the Layout window, click on "Clock ", you will see various options, you can set any of the options to run CTS. If you click on Clock ' Core CTS and Optimization
#@ clock_opt -only_cts -no_clock_route
#@ set_fix_hold ideal_clock1
#@ extract_rc > reports/fifo_cts_extract_rc.rpt
#@ clock_opt -only_psyn -area_recovery -no_clock_route
#@ route_zrt_group -all_clock_nets -reuse_existing_global_route true
#@ 
#@ report_constraints > reports/fifo_cts_constraints.rpt
#@ all_ideal_nets > reports/fifo_cts_ideal_nets.rpt
#@ all_high_fanout > reports/fifo_cts_high_fanout.rpt
#@ check_legality > reports/fifo_cts_check_legality.rpt
#@ verify_pg_nets > reports/fifo_cts_verify_pg_nets.rpt
#@ 
#@ ##Save the Cell and report timing
#@ 
#@ save_mw_cel -as fifo_cts
#@ report_placement_utilization > reports/fifo_cts_util.rpt
#@ report_qor_snapshot > reports/fifo_cts_qor_snapshot.rpt
#@ report_qor > reports/fifo_cts_qor.rpt
#@ report_timing -max_paths 20 -delay max > reports/fifo_cts.setup.rpt
#@ report_timing -max_paths 20 -delay min > reports/fifo_cts.hold.rpt
#@ 
#@ # -- End source scripts/cts_icc.tcl

#@ source -echo scripts/route_icc.tcl
#@ # -- Starting source scripts/route_icc.tcl

#@ ###########################################################################
#@ ### Routing
#@ ###########################################################################
#@ 
#@ ##In the layout window, click on Route -> Core Routing and Optimization
#@ route_opt -initial_route_only
